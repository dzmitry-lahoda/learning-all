/*

*/
using System;
using System.Linq;

using Xunit;

namespace ConsoleApp1
{
    class Program
    {


        static void Main(string[] args)
        {
            var s = new Solution();
            Assert.Equal(-1, s.solution(new[] { 0 }));
            Assert.Equal(1, s.solution(new int[] { 0, 1, 1, 1, 0, 1, 1, 1, 0, 1 }));
            Assert.Equal(0, s.solution(new int[] { 1, 1, 1, 1, 1, 1 }));
            Assert.Equal(0, s.solution(new int[] { 1, 0, 1 }));
            Assert.Equal(4, s.solution(new int[] { 0, 0, 0, 0, 1 }));
            Assert.Equal(0, s.solution(new int[] { 1 }));
            Assert.Equal(1, s.solution(new int[] { 0, 1, 0, 1 }));
            Assert.Equal(0, s.solution(new int[] { 1, 0, 1, 0 }));
        }

        class Solution
        {
            public int solution(int[] A)
            {
                int n = A.Length;
                int i = n - 1;
                int result = -1;
                int k = 0, maximal = 0;
                while (i > 0)
                {
                    if (A[i] == 1)
                    {
                        k = k + 1;
                        if (k >= maximal)
                        {
                            maximal = k;
                            result = i;
                        }
                    }
                    else
                        k = 0;
                    i = i - 1;
                }
                if (A[i] == 1 && k + 1 >= maximal)
                    result = 0;
                return result;
            }

        }
    }
}